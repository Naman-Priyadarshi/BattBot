
name: PyBaMM Twitter bot

on:
  push:

  pull_request:

  schedule:
    - cron:  '0 3 * * *'

jobs:

  style:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup python
      uses: actions/setup-python@v1
      with:
        python-version: 3.9

    - name: Check style
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
        flake8

  build:
    needs: style
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel coverage
        pip install -r requirements.txt
    
    - name: Run unit tests
      if: matrix.os == 'macos-latest'
      run: |
        python -m unittest
      env:
        ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
        ACCESS_SECRET: ${{ secrets.ACCESS_SECRET }}
        CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
        CONSUMER_SECRET: ${{ secrets.CONSUMER_SECRET }}
        
    - name: Tweet
      if: matrix.os == 'ubuntu-latest' && github.ref == 'refs/heads/main'
      run: |
        cd bot
        python tweet_plot.py
      env:
        ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
        ACCESS_SECRET: ${{ secrets.ACCESS_SECRET }}
        CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
        CONSUMER_SECRET: ${{ secrets.CONSUMER_SECRET }}
    
    - name: Generate coverage report
      if: matrix.os == 'ubuntu-latest'
      run: |
        export COVERAGE_PROCESS_START=$PWD/.coveragerc
        coverage run -m --omit=*/test* unittest
        coverage combine
      env:
        ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
        ACCESS_SECRET: ${{ secrets.ACCESS_SECRET }}
        CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
        CONSUMER_SECRET: ${{ secrets.CONSUMER_SECRET }}
    
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v1
